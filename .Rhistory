ggplot(clasif_report %>% filter(metric != "support"), aes(x = metric, y = label_1, fill = model))+
geom_col(position = 'dodge')+
scale_fill_manual(values = wes_palette("BottleRocket2"))+
labs(x = "Métrica",
y = "Clasificación deforestación",
fill = "Modelo")+
theme_minimal()
ggplot(clasif_report %>% filter(metric != "support"), aes(x = metric, y = label_1, fill = model))+
geom_col(position = 'dodge')+
scale_fill_manual(values = wes_palette("BottleRocket2"))+
labs(x = "Métrica",
y = "Clasificación deforestación",
fill = "Modelo")+
theme_minimal()
predictions <- st_read('/home/laia/Escritorio/factor_data/factor_data_deforestacion/data/preds/test_predictions.dbf')
predictions <- predictions %>% select(label_0, starts_with("predic"))
predictions <- predictions %>% pivot_longer(cols = c(label_0, prediction:predicti_2), names_to  = 'model', values_to = 'prediction') %>%
mutate(model = case_when(
model == "label_0" ~ "Original",
model == "prediction" ~ "RF",
model == "predicti_1" ~ "XGB",
model == "predicti_2" ~ "LR"
))
ggplot(predictions, aes(x = prediction, fill = model))+
geom_bar(position = 'dodge')+
scale_fill_manual(values = wes_palette("BottleRocket2"))+
theme_minimal()
ggplot(clasif_report %>% filter(metric != "support"), aes(x = metric, y = label_1, fill = model))+
geom_col(position = 'dodge')+
scale_fill_viridis_d()+
#scale_fill_manual(values = wes_palette("BottleRocket2"))+
labs(x = "Métrica",
y = "Clasificación deforestación",
fill = "Modelo")+
theme_minimal()
ggplot(predictions, aes(x = prediction, fill = model))+
geom_bar(position = 'dodge')+
scale_fill_viridis_d()+
#  scale_fill_manual(values = wes_palette("BottleRocket2"))+
theme_minimal()
ggplot(clasif_report %>% filter(metric != "support"), aes(x = metric, y = label_1, fill = model))+
geom_col(position = 'dodge')+
scale_fill_viridis_d()+
#scale_fill_manual(values = wes_palette("BottleRocket2"))+
labs(x = "Métrica",
y = "Clasificación deforestación",
fill = "Modelo")+
theme_minimal()
ggplot(predictions, aes(x = prediction, fill = model))+
geom_bar(position = 'dodge')+
scale_fill_viridis_d()+
#  scale_fill_manual(values = wes_palette("BottleRocket2"))+
theme_minimal()
predictions
predictions <- st_read('/home/laia/Escritorio/factor_data/factor_data_deforestacion/data/preds/test_predictions.dbf')
View(predictions)
predictions <- predictions %>% pivot_longer(cols = c(label_0, prediction:predicti_2), names_to  = 'model', values_to = 'prediction') %>%
mutate(model = case_when(
model == "label_0" ~ "Original",
model == "prediction" ~ "RF",
model == "predicti_1" ~ "XGB",
model == "predicti_2" ~ "LR"
))
View(predictions)
predictions
View(predictions)
predictions <- st_read('/home/laia/Escritorio/factor_data/factor_data_deforestacion/data/preds/test_predictions.dbf')
predictions <- predictions %>% pivot_longer(cols = c(label_0, prediction:predicti_2), names_to  = 'model', values_to = 'prediction') %>%
mutate(model = case_when(
model == "label_0" ~ "Original",
model == "prediction" ~ "RF",
model == "predicti_1" ~ "XGB",
model == "predicti_2" ~ "LR"
))
predictions <- st_read('/home/laia/Escritorio/factor_data/factor_data_deforestacion/data/preds/test_predictions.dbf')
View(predictions)
predictions %>% group_by(label_0, prediction, predicti_1, predicti_2) %>%
summarise_at(vars(NDVI_2000:NDVI_2019))
?summarise_at
predictions %>% group_by(label_0, prediction, predicti_1, predicti_2) %>%
summarise_at(vars(NDVI_2000:NDVI_2019), median)
predictions <- st_read('/home/laia/Escritorio/factor_data/factor_data_deforestacion/data/preds/test_predictions.dbf')
predictions <- predictions %>% pivot_longer(cols = c(prediction:predicti_2), names_to  = 'model', values_to = 'prediction') %>%
mutate(model = case_when(
#model == "label_0" ~ "Original",
model == "prediction" ~ "RF",
model == "predicti_1" ~ "XGB",
model == "predicti_2" ~ "LR"
))
View(predictions)
predictions
View(predictions)
predictions %>% group_by(label_0, model, prediction) %>%
summarise_at(vars(NDVI_2000:NDVI_2019), median)
predictions %>% group_by(label_0, model, prediction) %>%
summarise_at(vars(NDVI_2000:NDVI_2019), median) %>%
mutate(error = case_when(
label_0 != prediction ~ "Sí",
label_0 == prediction ~ "No"
))
error_data <- predictions %>% group_by(label_0, model, prediction) %>%
summarise_at(vars(NDVI_2000:NDVI_2019), median) %>%
mutate(error = case_when(
label_0 != prediction ~ "Sí",
label_0 == prediction ~ "No"
))
View(predictions)
View(error_data)
error_data %>% filter(error == "Si")
error_data %>% filter(error == "Si")
error_data %>% filter(error == "Si")
error_data %>% filter(error == "Sí")
error_data <- error_data %>% filter(error == "Sí")
View(error_data)
error_data %>% pivot_longer(cols = NDVI_2000:NDVI_2019, names_to = "year", values_to = "NDVI")
error_data <- error_data %>% pivot_longer(cols = NDVI_2000:NDVI_2019, names_to = "year", values_to = "NDVI")
View(error_data)
extract_numeric(error_data$year)
error_data %>% mutate(year = extract_numeric(year))
error_data %>% mutate(year = as.numeric(extract_numeric(year)))
error_data <- predictions %>% group_by(label_0, model, prediction) %>%
summarise_at(vars(NDVI_2000:NDVI_2019), median) %>%
mutate(error = case_when(
label_0 != prediction ~ "Sí",
label_0 == prediction ~ "No"
))
error_data <- error_data %>% pivot_longer(cols = NDVI_2000:NDVI_2019, names_to = "year", values_to = "NDVI")
error_data <- error_data %>% mutate(year = as.numeric(extract_numeric(year)))
error_data <- error_data %>% filter(error == "Sí")
View(predictions)
predictions
predictions <- st_read('/home/laia/Escritorio/factor_data/factor_data_deforestacion/data/preds/test_predictions.dbf')
predictions <- predictions %>% pivot_longer(cols = c(prediction:predicti_2), names_to  = 'model', values_to = 'prediction') %>%
mutate(model = case_when(
model == "prediction" ~ "RF",
model == "predicti_1" ~ "XGB",
model == "predicti_2" ~ "LR"
))
predictions %>%
mutate(error = case_when(
label_0 != prediction ~ "Sí",
label_0 == prediction ~ "No"
))
predictions <- predictions %>%
mutate(error = case_when(
label_0 != prediction ~ "Sí",
label_0 == prediction ~ "No"
))
error_data <- predictions %>% group_by(label_0, model, error) %>%
summarise_at(vars(NDVI_2000:NDVI_2019), median)
error_data <- error_data %>% pivot_longer(cols = NDVI_2000:NDVI_2019, names_to = "year", values_to = "NDVI")
error_data <- error_data %>% mutate(year = as.numeric(extract_numeric(year)))
error_data <- error_data %>% filter(error == "Sí")
View(error_data)
ggplot(error_data, aes(x = year, y = NDVI, color = model))+
geom_line()
ggplot(error_data, aes(x = year, y = NDVI, color = model))+
geom_smooth()
error_data <- predictions %>% group_by(label_0, model, error) %>%
summarise_at(vars(NDVI_2000:NDVI_2019), median)
error_data <- error_data %>% pivot_longer(cols = NDVI_2000:NDVI_2019, names_to = "year", values_to = "NDVI")
error_data <- error_data %>% mutate(year = as.numeric(extract_numeric(year)))
ggplot(error_data, aes(x = year, y = NDVI, color = model))+
geom_smooth()+
facet_wrap(vars(error))
ggplot(error_data, aes(x = year, y = NDVI, color = model))+
geom_smooth()+
facet_wrap(vars(error))+
theme_minimal()
ggplot(error_data, aes(x = year, y = NDVI, color = model))+
geom_point()+
facet_wrap(vars(error))+
theme_minimal()
ggplot(error_data, aes(x = year, y = NDVI, color = model))+
geom_line()+
facet_wrap(vars(error))+
theme_minimal()
error_data
View(error_data)
library(lubridate)
error_data <- predictions %>% group_by(label_0, model, error) %>%
summarise_at(vars(NDVI_2000:NDVI_2019), median)
error_data <- error_data %>% pivot_longer(cols = NDVI_2000:NDVI_2019, names_to = "year", values_to = "NDVI")
error_data <- error_data %>% mutate(year = year(extract_numeric(year)))
error_data <- error_data %>% mutate(year = as.integer(extract_numeric(year)))
ggplot(error_data, aes(x = year, y = NDVI, color = model))+
geom_line()+
facet_wrap(vars(error))+
theme_minimal()
year(year)
ggplot(error_data, aes(x = year(year), y = NDVI, color = model))+
geom_line()+
facet_wrap(vars(error))+
theme_minimal()
error_data <- predictions %>% group_by(label_0, model, error) %>%
summarise_at(vars(NDVI_2000:NDVI_2019), median)
error_data <- error_data %>% pivot_longer(cols = NDVI_2000:NDVI_2019, names_to = "year", values_to = "NDVI")
error_data <- error_data %>% mutate(year = as.Date(extract_numeric(year)))
rlang::last_error()
error_data <- predictions %>% group_by(label_0, model, error) %>%
summarise_at(vars(NDVI_2000:NDVI_2019), mean)
error_data <- error_data %>% pivot_longer(cols = NDVI_2000:NDVI_2019, names_to = "year", values_to = "NDVI")
error_data <- error_data %>% mutate(year = as.numeric(extract_numeric(year)))
ggplot(error_data, aes(x = year(year), y = NDVI, color = model))+
geom_line()+
facet_wrap(vars(error))+
theme_minimal()
ggplot(error_data, aes(x = year, y = NDVI, color = model))+
geom_line()+
facet_wrap(vars(error))+
theme_minimal()
error_data <- predictions %>% group_by(label_0, model, error) %>%
summarise_at(vars(NDVI_2000:NDVI_2019), median)
error_data <- error_data %>% pivot_longer(cols = NDVI_2000:NDVI_2019, names_to = "year", values_to = "NDVI")
error_data <- error_data %>% mutate(year = as.numeric(extract_numeric(year)))
ggplot(error_data, aes(x = year, y = NDVI, color = model))+
geom_point()+
facet_wrap(vars(error))+
theme_minimal()
View(predictions)
View(error_data)
error_data %>% select(model, year)
error_data %>% group_by(model, year) %>%
summarise(n=n())
predictions %>% group_by(label_0, model, error)
error_data <- predictions %>% group_by(model, error) %>%
summarise_at(vars(NDVI_2000:NDVI_2019), median)
error_data <- error_data %>% pivot_longer(cols = NDVI_2000:NDVI_2019, names_to = "year", values_to = "NDVI")
error_data <- error_data %>% mutate(year = as.numeric(extract_numeric(year)))
ggplot(error_data, aes(x = year, y = NDVI, color = model))+
geom_point()+
facet_wrap(vars(error))+
theme_minimal()
ggplot(error_data, aes(x = year, y = NDVI, color = model))+
geom_line()+
facet_wrap(vars(error))+
theme_minimal()
View(error_data)
View(clasif_report)
predictions <- st_read('/home/laia/Escritorio/factor_data/factor_data_deforestacion/data/preds/test_predictions.dbf')
predictions <- predictions %>% pivot_longer(cols = c(prediction:predicti_2), names_to  = 'model', values_to = 'prediction') %>%
mutate(model = case_when(
model == "prediction" ~ "RF",
model == "predicti_1" ~ "XGB",
model == "predicti_2" ~ "LR"
))
predictions <- predictions %>%
mutate(error = case_when(
label_0 != prediction ~ "Sí",
label_0 == prediction ~ "No"
))
predictions
error_data <- predictions %>%
filter(label_0 == 1) %>%
group_by(model, error) %>%
summarise_at(vars(NDVI_2000:NDVI_2019), median)
error_data <- error_data %>% pivot_longer(cols = NDVI_2000:NDVI_2019, names_to = "year", values_to = "NDVI")
error_data <- error_data %>% mutate(year = as.numeric(extract_numeric(year)))
ggplot(error_data, aes(x = year, y = NDVI, color = model))+
geom_line()+
facet_wrap(vars(error))+
theme_minimal()
View(error_data)
View(clasif_report)
predictions
ggplot(predictions)+
geom_sf()
ggplot(predictions, aes(color = error))+
geom_sf()
ggplot(predictions, aes(color = error))+
geom_sf()+
facet_wrap(vars(model))
ggplot(predictions, aes(color = error))+
geom_sf()+
facet_wrap(vars(model))+
scale_color_viridis_d()
ggplot(predictions, aes(color = error))+
geom_sf()+
facet_wrap(vars(model))+
scale_color_viridis_d()+
theme_minimal()
predictions <- predictions %>%
mutate(error = case_when(
label_0 != prediction ~ "TP",
label_0 == prediction ~ "FP"
))
predictions <- st_read('/home/laia/Escritorio/factor_data/factor_data_deforestacion/data/preds/test_predictions.dbf')
predictions <- predictions %>% pivot_longer(cols = c(prediction:predicti_2), names_to  = 'model', values_to = 'prediction') %>%
mutate(model = case_when(
model == "prediction" ~ "RF",
model == "predicti_1" ~ "XGB",
model == "predicti_2" ~ "LR"
))
predictions <- predictions %>%
mutate(error = case_when(
label_0 != prediction ~ "TP",
label_0 == prediction ~ "FP"
))
ggplot(predictions %>% filter(label_0 == 1 ), aes(color = error))+
geom_sf()+
facet_wrap(vars(model))+
scale_color_viridis_d()
ggplot(predictions %>% filter(label_0 == 1 ), aes(color = error))+
geom_sf()+
facet_wrap(vars(model))+
scale_color_viridis_d()+
theme_minimal()
predictions <- st_read('/home/laia/Escritorio/factor_data/factor_data_deforestacion/data/preds/test_predictions.dbf')
predictions <- predictions %>% pivot_longer(cols = c(prediction:predicti_2), names_to  = 'model', values_to = 'prediction') %>%
mutate(model = case_when(
model == "prediction" ~ "RF",
model == "predicti_1" ~ "XGB",
model == "predicti_2" ~ "LR"
))
predictions <- predictions %>%
mutate(error = case_when(
label_0 == 1 & prediction == 1 ~ "TP",
label_0 == 1 & prediction == 2 | label_0 == 1 & prediction == 0 ~ "FN",
label_0 == 0 & prediction == 1 | label_0 == 2 & prediction == 1 ~ "FP",
TRUE ~ "TN"))
ggplot(predictions %>% filter(label_0 == 1 ), aes(color = error))+
geom_sf()+
facet_wrap(vars(model))+
scale_color_viridis_d()+
theme_minimal()
predictions %>% group_by(error)%>%
summarise(n=n())
View(predictions)
predictions %>% filter(error == "FP")
fp <- predictions %>% filter(error == "FP")
View(fp)
ggplot(predictions, aes(color = error))+
geom_sf()+
facet_wrap(vars(model))+
scale_color_viridis_d()+
theme_minimal()
ggplot(predictions %>>% filter(error != "TN"), aes(color = error))+
geom_sf()+
facet_wrap(vars(model))+
scale_color_viridis_d()+
theme_minimal()
ggplot(predictions %>% filter(error != "TN"), aes(color = error))+
geom_sf()+
facet_wrap(vars(model))+
scale_color_viridis_d()+
theme_minimal()
View(clasif_report)
library(st)
library(sf)
data <- st_read('/home/laia/Descargas/google_landcover.geojson')
View(data)
preds_landcover <- st_read('/home/laia/Escritorio/factor_data/factor_data_deforestacion/data/preds/test_predictions_landcover_google.shp')
preds_landcover <- preds_landcover %>% pivot_longer(cols = c(prediction:predicti_2), names_to  = 'model', values_to = 'prediction') %>%
mutate(model = case_when(
model == "prediction" ~ "RF",
model == "predicti_1" ~ "XGB",
model == "predicti_2" ~ "LR"
))
preds_landcover <- preds_landcover %>%
mutate(error = case_when(
label_0 == 1 & prediction == 1 ~ "TP",
label_0 == 1 & prediction == 2 | label_0 == 1 & prediction == 0 ~ "FN",
label_0 == 0 & prediction == 1 | label_0 == 2 & prediction == 1 ~ "FP",
TRUE ~ "TN"))
library(tidyverse)
library(viridis)
library(sf)
library(caret)
library(gt)
library(wesanderson)
library(lubridate)
preds_landcover <- preds_landcover %>% pivot_longer(cols = c(prediction:predicti_2), names_to  = 'model', values_to = 'prediction') %>%
mutate(model = case_when(
model == "prediction" ~ "RF",
model == "predicti_1" ~ "XGB",
model == "predicti_2" ~ "LR"
))
preds_landcover <- preds_landcover %>%
mutate(error = case_when(
label_0 == 1 & prediction == 1 ~ "TP",
label_0 == 1 & prediction == 2 | label_0 == 1 & prediction == 0 ~ "FN",
label_0 == 0 & prediction == 1 | label_0 == 2 & prediction == 1 ~ "FP",
TRUE ~ "TN"))
View(preds_landcover)
View(preds_landcover)
preds_landcover <- preds_landcover %>%
mutate(error = case_when(
label_0_le == 1 & prediction == 1 ~ "TP",
label_0_le == 1 & prediction == 2 | label_0_le == 1 & prediction == 0 ~ "FN",
label_0_le == 0 & prediction == 1 | label_0_le == 2 & prediction == 1 ~ "FP",
TRUE ~ "TN"))
ggplot(count_errors %>% filter(error != "TP"), aes(x = error, y = n, fill = as.factor(label)))+
geom_col(position = 'fill')+
#guides(fill=guide_legend(label.vjust = -7,label.position = "bottom"))+
scale_fill_viridis_d(option = "plasma")+
facet_wrap(vars(model))+
theme_minimal() +
theme(legend.position = "bottom",
legend.direction = "horizontal") +
labs(fill = "Cluster de \nuso de suelo")
ggplot(preds_landcover %>% filter(error != "TP"), aes(x = error, y = n, fill = as.factor(label)))+
geom_col(position = 'fill')+
#guides(fill=guide_legend(label.vjust = -7,label.position = "bottom"))+
scale_fill_viridis_d(option = "plasma")+
facet_wrap(vars(model))+
theme_minimal() +
theme(legend.position = "bottom",
legend.direction = "horizontal") +
labs(fill = "Cluster de \nuso de suelo")
count_errors <- preds_landcover %>% group_by(model, error, label) %>%
summarise(n=n()) %>%
arrange(desc(n)) #%>%
ggplot(count_errors %>% filter(error != "TP"), aes(x = error, y = n, fill = as.factor(label)))+
geom_col(position = 'fill')+
#guides(fill=guide_legend(label.vjust = -7,label.position = "bottom"))+
scale_fill_viridis_d(option = "plasma")+
facet_wrap(vars(model))+
theme_minimal() +
theme(legend.position = "bottom",
legend.direction = "horizontal") +
labs(fill = "Cluster de \nuso de suelo")
View(count_errors)
library(tidyverse)
library(sf)
library(tidyverse)
library(sf)
paths <- list.files(path = "./data/ndvi_points_years_0123",
pattern = "*.csv")
paths <- list.files(path = "./data/ndvi_points_years_0123",
pattern = "*.geojson")
paths <- paste0("./data/ndvi_points_years_0123/", paths)
paths
train_paths <- paths[str_detect(paths, 'train')]
test_paths <- paths[str_detect(paths, 'test')]
train_sets <- lapply(train_paths, sf_read)
train_sets <- lapply(train_paths, st_read)
train_sets <- train_sets %>% reduce(inner_join, by = ".geo")
train_sets
train_sets %>% reduce(inner_join, by = "geometry")
?st_join
View(train_sets)
train_sets <- train_sets %>% reduce(st_join)
View(train_sets)
summary(train_sets)
?st_write
st_write(train_set, "./data/train_0123.geojson")
st_write(train_sets, "./data/train_0123.geojson")
test_sets <- lapply(test_paths, st_read)
test_sets <- test_sets %>% reduce(st_join)
st_write(test_sets, "./data/test_0123.geojson")
View(test_sets)
train_sets %>% select(starts_with("NDVI_"), id.x, label.x)
train_sets %>% select(starts_with("NDVI_"), id.x, label.x, -NDVI_2018.x)
train_sets %>% select(starts_with("NDVI_"), id.x, label.x, -NDVI_2018.x) %>%
rename(NDVI_2018 = NDVI_2018.y)
paths <- list.files(path = "./data/ndvi_points_years_0123",
pattern = "*.geojson")
paths <- paste0("./data/ndvi_points_years_0123/", paths)
train_paths <- paths[str_detect(paths, 'train')]
test_paths <- paths[str_detect(paths, 'test')]
train_sets <- lapply(train_paths, st_read)
train_sets <- train_sets %>% reduce(st_join)
train_sets <- train_sets %>% select(starts_with("NDVI_"), id.x, label.x, -NDVI_2018.x) %>%
rename(NDVI_2018 = NDVI_2018.y)
test_sets <- lapply(test_paths, st_read)
test_sets <- test_sets %>% reduce(st_join)
test_sets <- test_sets %>% select(starts_with("NDVI_"), id.x, label.x, -NDVI_2018.x) %>%
rename(NDVI_2018 = NDVI_2018.y)
st_write(train_sets, "./data/train_0123.geojson")
st_write(train_sets, "./data/train_0123.geojson")
st_write(test_sets, "./data/test_0123.geojson")
View(train_sets)
library(tidyverse)
library(viridis)
library(sf)
library(caret)
library(gt)
library(wesanderson)
library(lubridate)
predictions <- st_read('/home/laia/Escritorio/factor_data/factor_data_deforestacion/data/preds/test_predictions_rf_new.shp')
View(predictions)
predictions %>% rename(label_0 = label.x)
predictions <- predictions %>% rename(label_0 = label.x)
predictions <- predictions %>%
mutate(error = case_when(
label_0 == 1 & prediction == 1 ~ "TP",
label_0 == 1 & prediction == 2 | label_0 == 1 & prediction == 0 ~ "FN",
label_0 == 0 & prediction == 1 | label_0 == 2 & prediction == 1 ~ "FP",
TRUE ~ "TN"))
ggplot(predictions, aes(x = prediction, fill = model))+
geom_bar(position = 'dodge')+
scale_fill_viridis_d()+
theme_minimal()
ggplot(predictions %>% filter(error != "TN"), aes(color = error))+
geom_sf()+
#facet_wrap(vars(model))+
scale_color_manual(values = wes_palette("Darjeeling1"))+
theme_minimal()
error_data <- predictions %>%
#filter(label_0 == 1) %>%
group_by(error) %>%
summarise_at(vars(NDVI_2000:NDVI_2019), median)
error_data <- error_data %>% pivot_longer(cols = NDVI_2000:NDVI_2019, names_to = "year", values_to = "NDVI")
error_data <- error_data %>% mutate(year = as.numeric(extract_numeric(year)))
ggplot(error_data, aes(x = year, y = NDVI, color = error))+
geom_line()+
#facet_wrap(vars(model),
#           ncol = 2)+
labs(x = "Año",
color = "Clasificación")+
theme_minimal()
View(predictions)
